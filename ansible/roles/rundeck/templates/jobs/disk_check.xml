<joblist>
  <job>
    <defaultTab>summary</defaultTab>
    <description>A job to check the amount of data on disks</description>
    <dispatch>
      <excludePrecedence>true</excludePrecedence>
      <keepgoing>true</keepgoing>
      <rankOrder>ascending</rankOrder>
      <successOnEmptyNodeFilter>true</successOnEmptyNodeFilter>
      <threadcount>1</threadcount>
    </dispatch>
    <executionEnabled>{% if job.uuid in jobs_disable_execution %}false{% else %}true{% endif %}</executionEnabled>
    <group>System/Scheduled</group>
    <id>{{job.uuid}}</id>
    <loglevel>INFO</loglevel>
    <name>{{ job.name | default('Disk check') }}</name>
    <nodeFilterEditable>false</nodeFilterEditable>
    <nodefilters>
      <filter>{{ job.filter | default('.*') }}</filter>
    </nodefilters>
    <nodesSelectedByDefault>true</nodesSelectedByDefault>
    <notification>
      <onfailure>
        <email attachLog='true' recipients='{{job.recipients}}' subject='{{job.subject}}' />
      </onfailure>
    </notification>
    <notifyAvgDurationThreshold />
    <schedule>
      <month month='*' />
      <time hour='05' minute='00' seconds='0' />
      <weekday day='*' />
      <year year='*' />
    </schedule>
    <scheduleEnabled>true</scheduleEnabled>
    <sequence keepgoing='false' strategy='node-first'>
      <command>
        <script><![CDATA[#!/bin/sh
hostname
df -HP | grep -vE '^Filesystem|^Sys.|tmpfs|cdrom' | awk '{ print $5 " " $1 }' | while read output;
do
  echo $output;
  used=$(echo $output | awk '{ print $1}' | cut -d'%' -f1  );
  if [ $used -ge {{ job.rate | default(80) }} ]; 
    then exit 1;
  fi;
done;
]]></script>
        <scriptargs />
      </command>
    </sequence>
    <uuid>{{job.uuid}}</uuid>
  </job>
</joblist>
